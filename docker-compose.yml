version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: voting
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - voting_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - voting_network

  broker:
    image: confluentinc/cp-kafka:7.9.1
    container_name: broker
    ports:
      - "9092:9092"
    restart: on-failure
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - voting_network

  spark-master:
    image: bitnami/spark:3.5.6
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    user: root
    restart: on-failure
    command: bin/spark-class org.apache.spark.deploy.master.Master
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./checkpoint:/opt/bitnami/spark/checkpoint
    networks:
      - voting_network

  spark-worker:
    image: bitnami/spark:3.5.6
    container_name: spark-worker
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - spark-master
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_CORES: 1
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - voting_network


volumes:
  postgres_data:
  kafka_data:

networks:
  voting_network: